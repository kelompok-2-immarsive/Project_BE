openapi:  3.0.3
info:
  title: PROJECT  BE13
  version: 1.0.0
  description:  Dokumentasi Project BE13
  contact:
    email: teguhbutarbutar160798@gmail.com
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Anti-Gen/PROJCECT-BE13/1.0.0
  - description: Real Projetc servers
    url: http://34.172.81.180:80

tags:
  - name: Auth
    description: "authentication"
  - name: Users
    description: "Manajemen data user"
  - name: Mentee
    description: "Manajemen data Mantee"
  - name: FeedBack
    description: "Manajemen FeedBack"
  - name: Class
    description: "Manajemen data Class"
  
  
paths:
  /login:
    post:
      tags:
        - Auth
      summary: Login
      description: Login akun 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                email: "teguh@mail.com"
                password: "123456"
      responses:
        '201':
          description: Login berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "Login berhasil"
                  data:
                      id: 1
                      email: "teguh@mail.com"
                      token:  "afkdnnifnnj&h3"
                      role: "Admin"
        '404' :
          $ref: '#/components/responses/404'

  /users:
    post:
      tags:
        - Users
      summary: add user
      description: Menambah data User (register)
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                full_name: "budi prakoso"
                email: "budi@mail.com"
                team: "be"
                password: "qwerty"
                phone_number: "0822349"
                address: "surabaya"
                status: "active"
                role: "admin"
      responses:
        '201':
          description: Register berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "register berhasil"
        '400':
          description: Register gagal.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "register gagal. semua field wajib diisi"
        '500':
          $ref: '#/components/responses/500'
    
    get:
      tags:
        - Users
      summary: get all users
      description: Melihat seluruh data user

      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success get all users"
                  data:
                    - id: 1
                      name: "budi"
                      email: "budi@mail.com"
                      address: "surabaya"
                    - id: 2
                      name: "rudi"
                      email: "rudi@mail.com"
                      address: "surabaya"
        '404':
          $ref: '#/components/responses/404'
  /users/:
    get:
      tags:
        - Users
      summary: get users by name
      description: Mencari User dengan nama
      parameters:
        - name: name
          description: "nama user"
          required: false
          in: query
          schema:
            type: string
            example: "budi"

      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success get all users"
                  data:
                    id: 1
                    name: "budi"
                    email: "budi@mail.com"
                    address: "surabaya"
                    
        '404':
          $ref: '#/components/responses/404'
  /users/{id_user}:
    put:
      tags:
        - Users
      summary: update users
      description: Mengubah data User
      security:
        - JWTAuth: []
      parameters:
        - name: id_user
          description: "id user"
          required: true
          in: path
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                full_name: "budi anggora"
                email: "anggora@mail.com"
                team: "fe"
                password: "12345"
                phone_number: "0822349"
                address: "surabaya"
                status: "active"
                role: "admin"
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success Update users"
                  data: 
                    full_name: "budi prakoso"
                    email: "budi@mail.com"
                    team: "be"
                    password: "qwerty"
                    phone_number: "0822349"
                    address: "surabaya"
                    status: "active"
                    role: "admin"
        '404':
          $ref: '#/components/responses/404'
    delete:
      tags:
        - Users
      summary: Delete Users
      description: menghapus akun user
      security:
        - JWTAuth: []
      parameters:
        - name: "id_user"
          description: "id_user"
          required: true
          in: path
          schema:
            type: integer
            example: 1
      responses:
        '201':
          description: Delete berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "Delete success"
                  data:
                    name: iswanul
                    email:  iswanul@mail.com
                    team: academic
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    

###########################################################
  /mentees:
    post:
      tags:
        - Mentee
      summary: add Mantee
      description: Menambah data mantee (register)
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                  name: "sari"
                  class: "be13"
                  address: "surabaya"
                  home_address: "surabaya"
                  email: "sari@gmail.com"
                  gender : "female" 
                  telegram: "08123"
                  phone:  "08123"
                  mantee_status:  "active"
                  emergency_phone:  "0888"
                  emergency_name: "bagus"       
                  emergency_relation: "saudara"
                  category: "non-informatics"
                  major:  "civil engineer"
                  graduate: "2020"
                
      responses:
        '201':
          description: Register berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "register berhasil"
        '400':
          description: Register gagal.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "register gagal. semua field wajib diisi"
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - Mentee
      summary: Get Mantee
      description: Melihat data Mantee
      security:
        - JWTAuth: []
      

      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success get mantee"
                  data:
                    - id: 1
                      name: "sari"
                      class: "be13"
                      address: "surabaya"
                      home_address: "surabaya"
                      email: "sari@gmail.com"
                      gender : "female" 
                      telegram: "08123"
                      phone:  "08123"
                      mantee_status:  "active"
                      emergency_phone:  "0888"
                      emergency_name: "bagus"       
                      emergency_relation: "saudara"
                      category: "non-informatics"
                      major:  "civil engineer"
                      graduate: "2020"
                      
                    
                    - id: 2
                      name: "budi"
                      class: "be14"
                      address: "surabaya"
                      home_address: "surabaya"
                      email:  "budi@mail..com"
                      gender :  "male"
                      telegram: "09882"
                      phone:  "09882"
                      mantee_status:  "active"
                      emergency_phone:  "01234"
                      emergency_name:   "bambang"       
                      emergency_relation: "orangtua" 
                      category: "informatics"
                      major: "it"
                      graduate: "2022"
        '404':
          $ref: '#/components/responses/404'   
  /mentees/:
    get:
      tags:
        - Mentee
      summary: Get Mantee by name,class,status,category
      description: Mencari data mentee
      security:
        - JWTAuth: []
      parameters:
        - name: Name
          description: "Mantee name"
          required: false
          in: query
          schema:
            type: string
            example: "budi"
        - name: class
          description: "Mantee class"
          required: false
          in: query
          schema:
            type: string
            example: "BE 13"
        - name: status
          description: "Mantee Status"
          required: false
          in: query
          schema:
            type: string
            example: "Active"
        - in: query
          name: Category
          description: Mantee's Backgorund
          schema:
            type: string
            enum: [Informatics,non-Informatics]

      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success get mantee"
                  data:
                    id: 1
                    name: "sari"
                    class: "be13"
                    address: "surabaya"
                    home_address: "surabaya"
                    email: "sari@gmail.com"
                    gender : "female" 
                    telegram: "08123"
                    phone:  "08123"
                    mantee_status:  "active"
                    emergency_phone:  "0888"
                    emergency_name: "bagus"       
                    emergency_relation: "saudara"
                    category: "non-informatics"
                    major:  "civil engineer"
                    graduate: "2020"

        '404':
          $ref: '#/components/responses/404' 
  /mentees/{id_mantee}:
    put:
      tags:
        - Mentee
      summary: update mantee
      description: Mengubah data Mantee
      security:
        - JWTAuth: []
      parameters:
        - name: id_mantee
          description: "id mantee"
          required: true
          in: path
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                full_name: "budi anggora"
                class: "be14"
                status: "active"
                category: "informatics"
                gender: "male"
                
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success Update mantee data"
                  data: 
                    full_name: "budi anggora"
                    class: "be14"
                    status: "active"
                    category: "informatics"
                    gender: "male"
        '404':
          $ref: '#/components/responses/404'

    delete:
      tags:
        - Mentee
      summary: Delete mantee
      description: menghapus akun mantee
      security:
        - JWTAuth: []
      parameters:
        - name: "id_mantee"
          description: "id_mantee"
          required: true
          in: path
          schema:
            type: integer
            example: 1
      responses:
        '201':
          description: Delete berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "Delete success"
                  data:
                    name: iswanul
                    class: "back-end 12"
                    category: "informatics"
                    gender: "female"
                    
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /mentees/{id_mantee}/feedback:
    get:
      tags:
        - Mentee
      summary: get feedback of specific mantee
      description: Melihat semua feedback yang dituju ke seorang mantee
      security:
        - JWTAuth: []
      parameters:
        - name: id_mantee
          description: "id mantee"
          required: true
          in: path
          schema:
            type: integer
            example: 1
    

      responses:
        '200':
          description: mantee data
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success get all users"
                  data:
                    id: 1
                    name: "sari"
                    class: "be13"
                    address: "surabaya"
                    home_address: "surabaya"
                    email: "sari@gmail.com"
                    gender : "female" 
                    telegram: "08123"
                    phone:  "08123"
                    mantee_status:  "active"
                    emergency_phone:  "0888"
                    emergency_name: "bagus"       
                    emergency_relation: "saudara"
                    category: "non-informatics"
                    major:  "civil engineer"
                    graduate: "2020"
                  feedback:
                    - id_user: 1
                      status: "join class"
                      notes: "Ini bagian notes untuk mentee yang bersangkutan 1"
                      created_at: 2022:22:12
                    - id_user: 2
                      status: "continue srction 2"
                      notes: "Ini bagian notes untuk mentee yang bersangkutan 2"
                      created_at: 2022:22:12
                 
        '404':
          $ref: '#/components/responses/404'  
######################################################################################

  /feedbacks:
    post:
      tags:
        - FeedBack
      summary: Post Feedback
      description: memberi komentar ke Mantee
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                id_user: 1
                status: "join class"
                notes: "isi notes/komentar"
                id_mantee:  2
                
      responses:
        '200':
          description: mantee notes
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success add notes"
                  data:
                    id : 1 
                    id_user: 1
                    status: "join class"
                    notes: "isi notes/komentar"
                    id_mantee:  2
                    created_at: 2020:12:12
        '404':
          $ref: '#/components/responses/404'
        '500' :
          $ref: '#/components/responses/500'
  /feedbacks/{id_feedback}:
    put:
      tags:
        - FeedBack
      summary: Post Feedback
      description: mengedit komentar ke Mantee
      security:
        - JWTAuth: []
      parameters:
        - name: id_feedback
          description: "id feedback"
          required: true
          in: path
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                id_user: 1
                status: "join class"
                notes: "isi notes/komentar"
                id_mantee:  2
                
      responses:
        '200':
          description: mantee notes
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success add notes"
                  data:
                    id : 1 
                    id_user: 1
                    status: "join class"
                    notes: "isi notes/komentar"
                    id_mantee:  2
                    created_at: 2022:22:12
                    updated_at: 2022:22:13
        '404':
          $ref: '#/components/responses/404'
        '500' :
          $ref: '#/components/responses/500'

    delete:
      tags:
        - FeedBack
      summary: Delete Feedback
      description: menghapus feedback
      security:
        - JWTAuth: []
      parameters:
        - name: id_feedback
          description: "id_feedback"
          required: true
          in: path
          schema:
            type: integer
            example: 1
      responses:
        '201':
          description: Delete berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "Delete feedback success"
                  
                    
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

####################################################################
  /classes:
    post:
      tags:
        - Class
      summary: Create Class
      description: membuat kelas baru
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                nama_kelas: "back-end batch 13"
                id_user: 1
                
      responses:
        '200':
          description: create class
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success add class"
                  data:
                    id : 1 
                    id_user: 1
                    nama_kelas: "back-end batch 13"
                    created_at: 2022:11:11
                    updated_at: 2022:11:11
                    
        '404':
          $ref: '#/components/responses/404'
        '500' :
          $ref: '#/components/responses/500'

    get:
      tags:
        - Class
      summary: Get Class
      description: Melihat data kelas
      security:
        - JWTAuth: []


      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success get mantee"
                  data:
                    - id : 1 
                      id_user: 2
                      nama_kelas: "back-end batch 13"
                      created_at: 2022:11:11
                      updated_at: 2022:11:12
                      
                    
                    - id : 2 
                      id_user: 3
                      nama_kelas: "back-end batch 14"
                      created_at: 2022:11:11
                      updated_at: 2022:11:12
        '404':
          $ref: '#/components/responses/404'  
  /classes/:
    get:
      tags:
        - Class
      summary: Get Class by Name
      description: Mencari data kelas dengan nama
      security:
        - JWTAuth: []
      parameters:
        - name: class_name
          description: "Class name"
          required: false
          in: query
          schema:
            type: string
            example: "back-end batch 13"

      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success get mantee"
                  data:
                    id : 1 
                    id_user: 2
                    nama_kelas: "back-end batch 13"
                    created_at: 2022:11:11
                    updated_at: 2022:11:12
                      
                  
        '404':
          $ref: '#/components/responses/404'  
  /classes/{id_class}:
    put:
      tags:
        - Class
      summary: Update Class data
      description: mengedit data kelas
      security:
        - JWTAuth: []
      parameters:
        - name: "id_class"
          description: "id_class"
          required: true
          in: path
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                nama_kelas: "back-end batch 13"
                id_user: 2
                
      responses:
        '200':
          description: mantee notes
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success add notes"
                  data:
                    id : 1 
                    id_user: 2
                    nama_kelas: "back-end batch 13"
                    created_at: 2022:11:11
                    updated_at: 2022:11:12
        '404':
          $ref: '#/components/responses/404'
        '500' :
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Class
      summary: Delete Class
      description: menghapus Kelas
      security:
        - JWTAuth: []
      parameters:
        - name: "id_class"
          description: "id_class"
          required: true
          in: path
          schema:
            type: integer
            example: 1
      responses:
        '201':
          description: Delete berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "Delete success"
                  data:
                    nama_kelas: "back-end batch 13"
                    id_user:  "1"
                    
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'  
 


    
####################################
#  COMPONENTS
####################################
components:
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "use Token"

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        address:
          type: string
        role:
          type: string
          enum:
            - admin
            - user
        status:
          type: boolean
        created_at:
          type: string
          format: date-time

    ResponseWithoutData:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
  responses:
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            $ref: '#/components/schemas/ResponseWithoutData'
          example:
            status: "failed"
            message: "data not found"


    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            $ref: '#/components/schemas/ResponseWithoutData'
          example:
            status: "failed"
            message: "internal server error"