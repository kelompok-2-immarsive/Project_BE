openapi:  3.0.3
info:
  title: PROJECT  BE13
  version: 1.0.0
  description:  Dokumentasi Project BE13
  contact:
    email: teguhbutarbutar160798@gmail.com
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Anti-Gen/PROJCECT-BE13/1.0.0
  - description: Real Projetc servers
    url: http://34.172.81.180:80

tags:
  - name: Auth
    description: "authentication"
  - name: Users
    description: "Manajemen data user"
  - name: Mantee
    description: "Manajemen data Mantee"
  - name: FeedBack
    description: "Manajemen FeedBack"
  - name: Class
    description: "Manajemen data Class"
  
  
paths:
  /login:
    post:
      tags:
        - Auth
      summary: Login
      description: Login akun 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                email: "teguh@mail.com"
                password: "123456"
      responses:
        '201':
          description: Login berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "Login berhasil"
                  data:
                      id: 1
                      email: "budi@mail.com"
                      token:  "afkdnnifnnj&h3"
                      role: "Admin"
        '404' :
          $ref: '#/components/responses/404'



####################################
#  COMPONENTS
####################################
components:
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "use Token"

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        address:
          type: string
        role:
          type: string
          enum:
            - admin
            - user
        status:
          type: boolean
        created_at:
          type: string
          format: date-time

    ResponseWithoutData:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
  responses:
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            $ref: '#/components/schemas/ResponseWithoutData'
          example:
            status: "failed"
            message: "data not found"


    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            $ref: '#/components/schemas/ResponseWithoutData'
          example:
            status: "failed"
            message: "internal server error"